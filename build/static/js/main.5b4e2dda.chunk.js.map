{"version":3,"sources":["ErrorMessage.js","GraphService.js","calendar/components/CalendarListItemHeader.jsx","calendar/components/CalendarListItem.jsx","calendar/store/getCalendarStore.js","calendar/actions/calendarActions.js","calendar/utils.js","calendar/selectors/getCalendarEvents.js","calendar/components/Calendar.jsx","calendar/components/CalendarHeader.jsx","calendar/components/CalendarBox.jsx","App.js","serviceWorker.js","index.js","Config.js"],"names":["ErrorMessage","debug","this","props","className","Alert","color","message","React","Component","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","a","console","log","client","api","get","user","getEvents","select","orderby","events","CalendarListItemHeader","start","CalendarListItem","duration","subject","location","encodeEtag","encodeURIComponent","to","role","getCalendarStore","createStore","value","updateCalendarItemsMap","mutatorAction","newEvents","getDateTime","datetime","override","day","time","fullDate","split","_date","_time","h","m","__date","Date","date","getDate","currentDate","toLocaleString","weekday","dateTime","getMonth","getParsedEventsMap","dateGroups","forEach","item","end","distance","Math","abs","hours","floor","minutes","slice","getDuration","_item","itemId","id","isRead","displayName","push","err","Calendar","observer","window","msal","acquireTokenSilent","scopes","config","error","eventsMap","eventKeys","Object","keys","sort","activeEtag","match","params","etag","eventDetails","decodedAcTiveEtag","decodeURIComponent","find","e","getActiveEventDetailsByEtag","dangerouslySetInnerHTML","__html","body","content","map","eventKey","k","Fragment","key","CalendarHeader","headerText","CalendarBox","App","userAgentApplication","UserAgentApplication","auth","clientId","appId","navigateToLoginRequestUrl","redirectUri","handleRedirectCallback","response","getAccount","state","isAuthenticated","getUserProfile","login","JSON","stringify","exact","path","render","showError","setErrorMessage","bind","setState","loginPopup","prompt","s","idToken","idTokenClaims","g","errParts","length","logout","email","mail","userPrincipalName","document","head","getElementsByTagName","text","Boolean","hostname","RegExp","href","toLowerCase","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","bootstrap","module","exports"],"mappings":"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","file":"static/js/main.5b4e2dda.chunk.js","sourcesContent":["import React from 'react';\nimport { Alert } from 'reactstrap';\n\nexport default class ErrorMessage extends React.Component {\n  render() {\n    let debug = null;\n    if (this.props.debug) {\n      debug = <pre className=\"alert-pre border bg-light p-2\"><code>{this.props.debug}</code></pre>;\n    }\n    return (\n      <Alert color=\"danger\">\n        <p className=\"mb-3\">{this.props.message}</p>\n        {debug}\n      </Alert>\n    );\n  }\n}","var graph = require('@microsoft/microsoft-graph-client');\n\nfunction getAuthenticatedClient(accessToken) {\n  // Initialize Graph client\n  const client = graph.Client.init({\n    // Use the provided access token to authenticate\n    // requests\n    authProvider: (done) => {\n      done(null, accessToken.accessToken);\n    }\n  });\n\n  return client;\n}\n\nexport async function getUserDetails(accessToken) {\n\n    console.log(\"getUserDetails\");\n  const client = getAuthenticatedClient(accessToken);\n  console.log(\"getUserDetails\", client );\n  const user = await client.api('/me').get();\n  return user;\n}\n\nexport async function getEvents(accessToken, select) {\n    const client = getAuthenticatedClient(accessToken);\n    if(select === false){\n        return;\n    }\n    const events = await client\n        .api('/me/events')\n        .orderby('createdDateTime DESC')\n        .select(select)\n        .get();\n\n    return events;\n}","import React from 'react';\nimport \"../styles/CalendarListItemHeader.css\";\n\nexport const CalendarListItemHeader = ({\n                                         start\n})=><div className=\"header_4\">\n  <div className=\"header_5\">\n    <div className=\"header_6\">\n      { start[0]} {start[2]}\n    </div>\n  </div>\n</div>;","\nimport React from 'react';\nimport '../styles/CalendarListItem.css';\nimport {Link} from \"react-router-dom\";\nexport const CalendarListItem = (props) => {\n  const {start, duration, subject, location} = props;\n  const encodeEtag = encodeURIComponent(props[\"@odata.etag\"]);\n  return <Link className=\"calendar_3\"  to={`/event-details/${encodeEtag}`}>\n    <div className=\"calendar_4\">\n      <div className=\"calendar_5\">{start && start[1]}</div>\n      <div className=\"calendar_6\">{duration}</div>\n    </div>\n    <div className=\"calendar_7\">\n      <div className=\"calendar_8\" />\n    </div>\n    <div className=\"calendar_9\">\n      <div className=\"calendar_12\">\n        <div className=\"calendar_13\">\n          <div className=\"calendar_14\">{subject}</div>\n        </div>\n        {location &&\n        <div className=\"calendar_15\">\n          <span role=\"img\">&#128205;</span>\n          {location}\n        </div>\n        }\n      </div>\n    </div>\n  </Link>;\n}\n","import {createStore} from 'satcheljs';\n\nexport const getCalendarStore = createStore(\"calendarStore\", {\n    events:{value: []}\n});","import {mutatorAction} from 'satcheljs';\nimport {getCalendarStore} from '../store/getCalendarStore';\n\n// returns a mutator function, which  creates and dispatches and handles, an UPDATE_CALENDAR_ITEMS_MAP action\nexport const updateCalendarItemsMap = mutatorAction(\"UPDATE_CALENDAR_ITEMS_MAP\",(newEvents) => {\n    const calendarStore = getCalendarStore();\n    const {events} = calendarStore;\n   events.value=newEvents.value;\n});\n","const COLOR_SWATCHES_LOOKUP = [\n  'lightGreen',\n  'lightBlue',\n  'lightPink',\n  'green',\n  'darkGreen',\n  'pink',\n  'magenta',\n  'purple',\n  'black',\n  'teal',\n  'blue',\n  'darkBlue',\n  'orange',\n  'darkRed',\n  'red',\n];\n\nexport function sendToSW(message) {\n  if (\"serviceWorker\" in navigator && navigator.serviceWorker.controller) {\n    navigator.serviceWorker.controller.postMessage(message);\n  }\n}\nexport function triggerQueueSync(message) {\n  navigator.serviceWorker.ready.then(function(registration) {\n    registration.sync.register(message);\n  });\n}\n\nexport function getDateTime(datetime, override = true) {\n  if (!datetime) {\n    return ['', '', '', '', ''];\n  }\n  const [_date, _time] = datetime.split(\"T\");\n  const [h, m] = _time.split(\".\")[0].split(\":\");\n  const __date = new Date(_date);\n  let day, time, fullDate;\n  const date = __date.getDate();\n  const currentDate = new Date().getDate();\n  if (override) {\n    if (date === currentDate) {\n      day = \"Today\";\n    } else if (date === currentDate - 1) {\n      day = \"Yesterday\";\n    } else if (date === currentDate + 1) {\n      day = \"Tomorrow\";\n    }\n  }\n\n  [time, day, fullDate] = [`${h}:${m}`, day || __date.toLocaleString('en-us', {weekday: 'long'}), _date];\n  const dateTime = date === currentDate ? time : __date.getMonth() + '/' + date + ' ' + time;\n\n  return [date, time, day, fullDate, dateTime];\n}\n\nexport function getColorFromName(displayName) {\n  let color = 'blue';\n  if (!displayName) {\n      return color;\n  }\n\n  let hashCode = 0;\n  for (let iLen = displayName.length - 1; iLen >= 0; iLen--) {\n      const ch = displayName.charCodeAt(iLen);\n      const shift = iLen % 8;\n      // tslint:disable-next-line:no-bitwise\n      hashCode ^= (ch << shift) + (ch >> (8 - shift));\n  }\n\n  const COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\n\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\n\n  return color;\n}","import {getDateTime} from \"../utils\";\nimport {getCalendarStore} from \"../store/getCalendarStore\";\nimport {computed} from \"mobx\";\n\nconst getDuration = (end, start) => {\n    let distance = Math.abs(new Date(end) - new Date(start));\n    const hours = Math.floor(distance / 3600000);\n    distance -= hours * 3600000;\n    const minutes = Math.floor(distance / 60000);\n    return `${hours}:${(\"0\" + minutes).slice(-2)}`;\n};\nexport const getParsedEventsMap = () => {\n    const events = getCalendarStore()?.events;\n    try {\n        const dateGroups = {};\n        events.value.forEach(item => {\n            const start = getDateTime(item?.start?.dateTime);\n            const end = getDateTime(item?.end?.dateTime);\n            const duration = getDuration(item?.end?.dateTime, item?.start?.dateTime);\n            dateGroups[start[3]] = dateGroups[start[3]] || [];\n            const _item = {\n                ...item,\n                itemId: item?.id,\n                subject: item?.subject,\n                isRead: true,\n                start,\n                end,\n                location: item?.location?.displayName,\n                duration\n            };\n            dateGroups[start[3]].push(_item);\n        });\n        return dateGroups;\n    } catch (err) {\n        console.log(\"Error : \" + err);\n    }\n\n};\n\nexport const getActiveEventDetailsByEtag = (activeEtag) =>{\n    const events = getCalendarStore()?.events;\n    const decodedAcTiveEtag = decodeURIComponent(activeEtag);\n    return events?.value?.find(e=>{\n        return e?.[\"@odata.etag\"] === decodedAcTiveEtag;\n    });\n};","import React from 'react';\nimport {CalendarListItemHeader} from \"./CalendarListItemHeader\";\nimport {CalendarListItem} from \"./CalendarListItem\";\nimport config from \"../../Config\";\nimport {getEvents} from \"../../GraphService\";\nimport \"../styles/Calender.css\";\n\nimport {observer} from 'mobx-react';\nimport {updateCalendarItemsMap} from '../actions/calendarActions';\nimport {getActiveEventDetailsByEtag, getParsedEventsMap} from \"../selectors/getCalendarEvents\";\n\nexport const Calendar = observer(class Calendar extends React.Component {\n    async componentDidMount() {\n        try {\n            // Get the user's access token\n            const accessToken = await window.msal.acquireTokenSilent({\n                scopes: config.scopes\n            });\n            // Get the user's events\n            const events = await getEvents(accessToken, this.props.select);\n            // Update the array of events in state\n            events && updateCalendarItemsMap(events);\n        } catch (err) {\n            console.error('ERROR', err);\n        }\n    }\n\n    render() {\n        const eventsMap= getParsedEventsMap();\n        const eventKeys = Object.keys(eventsMap).sort();\n        const activeEtag = this?.props?.match?.params?.etag;\n        if(activeEtag){\n            const eventDetails = getActiveEventDetailsByEtag(activeEtag);\n            return <div dangerouslySetInnerHTML={{__html: eventDetails?.body?.content}}/>;\n        }\n        return <div className=\"mailListContainer\">{\n            eventKeys.map((eventKey, k) => <React.Fragment key={k}>\n                <CalendarListItemHeader start={eventsMap[eventKey][0]?.start}/>\n                {eventsMap[eventKey].map((e, k)=><CalendarListItem key={k} {...e} />)}\n            </React.Fragment>)\n        }\n        </div>;\n    }\n});","import React from 'react';\nimport \"../styles/CalendarHeader.css\";\nexport const CalendarHeader = ({headerText}) =><div className=\"header\" >\n  <div className=\"header-item\">\n      <span>{headerText}</span>\n  </div>\n</div>;\n","import React from 'react';\n\n  import {Calendar} from \"./Calendar\";\n  import {CalendarHeader} from \"./CalendarHeader\";\n\n\nexport const\n    CalendarBox = (props) =><>\n      <CalendarHeader {...props}/>\n      <Calendar {...props}/>\n      </>;\n\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { UserAgentApplication } from 'msal';\nimport ErrorMessage from './ErrorMessage';\nimport config from './Config';\nimport { getUserDetails } from './GraphService';\nimport {CalendarBox} from './calendar/components/CalendarBox';\n\nconst App = class App extends Component {\n  constructor(props) {\n    super(props);\n    const userAgentApplication = this.userAgentApplication = new UserAgentApplication({\n        auth: {\n            clientId: config.appId,\n            navigateToLoginRequestUrl: false,\n            redirectUri: config.redirectUri\n        }\n    });\n    userAgentApplication.handleRedirectCallback((error, response) => {\n      console.log(error, response.accessToken, response);\n    });\n    var user = this.userAgentApplication.getAccount();\n    console.log(\"got account\", user);\n    this.state = {\n      isAuthenticated: (user !== null),\n      user: {},\n      error: null\n    };\n\n    if (user) {\n      // Enhance user object with data from Graph\n      this.getUserProfile();\n    }else{\n      this.login();\n    }\n  }\n\n  render() {\n    let error = null;\n    const {user} =  this.state;\n    //empty\n    console.log(\"user in render\", user);\n    /**\n     * location: \n     */\n    if (this.state.error) {\n      error = <ErrorMessage message={this.state.error.message} debug={this.state.error.debug} />;\n    }\n\n    return (\n        <>\n     <pre>\n       {JSON.stringify(user)}\n       {JSON.stringify(window.location)}\n    </pre>\n      <Router>\n            <Route exact path=\"/\"\n              render={(props) =>\n                <CalendarBox {...props}\n                             headerText=\"Calendar\"\n                             user={user}\n                             showError={this.setErrorMessage.bind(this)}\n                             select=\"id,subject,start,end,location,body\"\n                />\n              } />\n            <Route exact path=\"/event-details/:etag\"\n               render={(props, params) =>\n                   <CalendarBox {...props} params={params}\n                                headerText=\"Calendar Details\"\n                                user={user}\n                                showError={this.setErrorMessage.bind(this)}\n                                select={false}\n                   />\n               } />\n      </Router></>\n    );\n  }\n\n  setErrorMessage(message, debug) {\n    this.setState({\n      error: {message: message, debug: debug}\n    });\n  }\n\n  async login() {\n    try {\n      const s = await this.userAgentApplication.loginPopup(\n        {\n          scopes: config.scopes,\n          prompt: \"select_account\"\n      });\n      console.log(\"login popup closed idToken, idTokenClaims\", s.idToken, s.idTokenClaims);\n      /**\n       * { uniqueId: \"98e50d11-9e73-44e3-baf7-682c838db2ca\",\n       * tenantId: \"d4f08ae6-b571-462b-a459-b56a8c0b2c14\",\n       * tokenType: \"id_token\",\n       * idToken: Object,\n       * idTokenClaims: Object,\n       * accessToken: null,\n       * scopes: Array[0], expiresOn: Date 2020-04-25T23:26:02.000Z, account: Object,\n       * accountState: \"156aeb73-9c3c-4649-905e-80ba1cca4f93\", 1 more… }\n       */\n      const g = await this.getUserProfile();\n      console.log(\"got User Profile\", g);//undefined if not logged in\n    }\n    catch(err) {\n      console.log(\"got error\", err);\n      var error = {};\n\n      if (typeof(err) === 'string') {\n        var errParts = err.split('|');\n        error = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: err };\n      } else {\n        error = {\n          message: err.message,\n          debug: JSON.stringify(err)\n        };\n      }\n\n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: error\n      });\n    }\n  }\n\n  logout() {\n    this.userAgentApplication.logout();\n  }\n\n  async getUserProfile() {\n    try {\n      // Get the access token silently\n      // If the cache contains a non-expired token, this function\n      // will just return the cached token. Otherwise, it will\n      // make a request to the Azure OAuth endpoint to get a token\n\n      var accessToken = await this.userAgentApplication.acquireTokenSilent({\n        scopes: config.scopes\n      });\n      /**\n       * Array [ \"Calendars.Read\", \"openid\", \"profile\", \"User.Read\", \"email\" ]\n       * { uniqueId: \"98e50d11-9e73-44e3-baf7-682c838db2ca\",\n       * tenantId: \"d4f08ae6-b571-462b-a459-b56a8c0b2c14\",\n       * tokenType: \"access_token\",\n       * idToken: Object,\n       * idTokenClaims: Object,\n       * accessToken: \"eyJ0eXAiOiJKV1QiLCJub25jZSI6InNHcGV…\",\n       * scopes: [ \"Calendars.Read\", \"openid\", \"profile\", \"User.Read\", \"email\" ],\n       * expiresOn: Date 2020-04-25T23:26:02.000Z,\n       * account: Object,\n       * accountState: \"22e88e26-d1ab-4581-95f8-ef55310e53b1\",\n       * 1 more… }\n       */\n      if (accessToken) {\n        // Get the user's profile from Graph\n        var user = await getUserDetails(accessToken);\n        console.log(\"got acquireTokenSilent, getUserDetails\", user);\n        this.setState({\n          isAuthenticated: true,\n          user: {\n            displayName: user.displayName,\n            email: user.mail || user.userPrincipalName\n          },\n          error: null\n        });\n        document.head.getElementsByTagName(\"title\")[0].text = `Calendar - ${user.displayName} - Outlook`;\n      }\n    }\n    catch(err) {\n      console.log(err);\n      var error = {};\n      if (typeof(err) === 'string') {\n        var errParts = err.split('|');\n        error = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: err };\n      } else {\n        error = {\n          message: err.message,\n          debug: JSON.stringify(err)\n        };\n        console.log(error);\n      }\n\n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: error\n      });\n    }\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware } from 'satcheljs';\nimport { trace } from 'satcheljs-trace';\n\nconst bootstrap = () => {\n    // Optionally enable some dev tools based on a URL parameter\n    let regex = new RegExp(\"[\\\\?&]devtools=\");\n    let url = window.location.href.toLowerCase();\n\n    // Render the app\n    ReactDOM.render(<App />, document.getElementById('root'));\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n};\n\n\nbootstrap();\n\n","module.exports = {\n  appId: '98f6c11f-26a7-4309-a75f-b8df6e384711',\n  redirectUri: 'https://outlook-sdf.office.com/mail/inbox',\n  scopes: [\n    'user.read',\n    'calendars.read'\n  ]\n};"],"sourceRoot":""}