{"version":3,"sources":["ErrorMessage.js","GraphService.js","calendar/components/CalendarListItemHeader.jsx","calendar/components/CalendarListItem.jsx","calendar/store/getCalendarStore.js","calendar/actions/calendarActions.js","calendar/utils.js","calendar/selectors/getCalendarEvents.js","calendar/components/Calendar.jsx","calendar/components/CalendarHeader.jsx","calendar/components/CalendarBox.jsx","App.js","serviceWorker.js","index.js","Config.js"],"names":["ErrorMessage","debug","this","props","className","Alert","color","message","React","Component","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","a","async","client","api","get","user","getEvents","select","orderby","events","CalendarListItemHeader","start","CalendarListItem","duration","subject","location","encodeEtag","encodeURIComponent","to","role","getCalendarStore","createStore","value","updateCalendarItemsMap","mutatorAction","newEvents","getDateTime","datetime","override","day","time","fullDate","split","_date","_time","h","m","__date","Date","date","getDate","currentDate","toLocaleString","weekday","dateTime","getMonth","getParsedEventsMap","dateGroups","forEach","item","end","distance","Math","abs","hours","floor","minutes","slice","getDuration","_item","itemId","id","isRead","displayName","push","err","console","log","Calendar","observer","window","msal","acquireTokenSilent","scopes","config","error","eventsMap","eventKeys","Object","keys","sort","activeEtag","match","params","etag","eventDetails","decodedAcTiveEtag","decodeURIComponent","find","e","getActiveEventDetailsByEtag","dangerouslySetInnerHTML","__html","body","content","map","eventKey","k","Fragment","key","CalendarHeader","headerText","CalendarBox","App","userAgentApplication","UserAgentApplication","auth","clientId","appId","redirectUri","cache","cacheLocation","storeAuthStateInCookie","getAccount","state","isAuthenticated","getUserProfile","login","exact","path","render","showError","setErrorMessage","bind","setState","loginPopup","prompt","errParts","length","JSON","stringify","logout","email","mail","userPrincipalName","document","head","getElementsByTagName","text","Boolean","hostname","regex","RegExp","url","href","toLowerCase","exec","applyMiddleware","default","trace","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","bootstrap","module","exports"],"mappings":"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","file":"static/js/main.50c2300a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nexport default class ErrorMessage extends React.Component {\r\n  render() {\r\n    let debug = null;\r\n    if (this.props.debug) {\r\n      debug = <pre className=\"alert-pre border bg-light p-2\"><code>{this.props.debug}</code></pre>;\r\n    }\r\n    return (\r\n      <Alert color=\"danger\">\r\n        <p className=\"mb-3\">{this.props.message}</p>\r\n        {debug}\r\n      </Alert>\r\n    );\r\n  }\r\n}","var graph = require('@microsoft/microsoft-graph-client');\r\n\r\nfunction getAuthenticatedClient(accessToken) {\r\n  // Initialize Graph client\r\n  const client = graph.Client.init({\r\n    // Use the provided access token to authenticate\r\n    // requests\r\n    authProvider: (done) => {\r\n      done(null, accessToken.accessToken);\r\n    }\r\n  });\r\n\r\n  return client;\r\n}\r\n\r\nexport async function getUserDetails(accessToken) {\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  const user = await client.api('/me').get();\r\n  return user;\r\n}\r\n\r\nexport async function getEvents(accessToken, select) {\r\n    const client = getAuthenticatedClient(accessToken);\r\n    if(select === false){\r\n        return;\r\n    }\r\n    const events = await client\r\n        .api('/me/events')\r\n        .orderby('createdDateTime DESC')\r\n        .select(select)\r\n        .get();\r\n\r\n    return events;\r\n}","import React from 'react';\r\nimport \"../styles/CalendarListItemHeader.css\";\r\n\r\nexport const CalendarListItemHeader = ({\r\n                                         start\r\n})=><div className=\"header_4\">\r\n  <div className=\"header_5\">\r\n    <div className=\"header_6\">\r\n      { start[0]} {start[2]}\r\n    </div>\r\n  </div>\r\n</div>;","\r\nimport React from 'react';\r\nimport '../styles/CalendarListItem.css';\r\nimport {Link} from \"react-router-dom\";\r\nexport const CalendarListItem = (props) => {\r\n  const {start, duration, subject, location} = props;\r\n  const encodeEtag = encodeURIComponent(props[\"@odata.etag\"]);\r\n  return <Link className=\"calendar_3\"  to={`/event-details/${encodeEtag}`}>\r\n    <div className=\"calendar_4\">\r\n      <div className=\"calendar_5\">{start && start[1]}</div>\r\n      <div className=\"calendar_6\">{duration}</div>\r\n    </div>\r\n    <div className=\"calendar_7\">\r\n      <div className=\"calendar_8\" />\r\n    </div>\r\n    <div className=\"calendar_9\">\r\n      <div className=\"calendar_12\">\r\n        <div className=\"calendar_13\">\r\n          <div className=\"calendar_14\">{subject}</div>\r\n        </div>\r\n        {location &&\r\n        <div className=\"calendar_15\">\r\n          <span role=\"img\">&#128205;</span>\r\n          {location}\r\n        </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  </Link>;\r\n}\r\n","import {createStore} from 'satcheljs';\r\n\r\nexport const getCalendarStore = createStore(\"calendarStore\", {\r\n    events:{value: []}\r\n});","import {mutatorAction} from 'satcheljs';\r\nimport {getCalendarStore} from '../store/getCalendarStore';\r\n\r\n// returns a mutator function, which  creates and dispatches and handles, an UPDATE_CALENDAR_ITEMS_MAP action\r\nexport const updateCalendarItemsMap = mutatorAction(\"UPDATE_CALENDAR_ITEMS_MAP\",(newEvents) => {\r\n    const calendarStore = getCalendarStore();\r\n    const {events} = calendarStore;\r\n   events.value=newEvents.value;\r\n});\r\n","const COLOR_SWATCHES_LOOKUP = [\r\n  'lightGreen',\r\n  'lightBlue',\r\n  'lightPink',\r\n  'green',\r\n  'darkGreen',\r\n  'pink',\r\n  'magenta',\r\n  'purple',\r\n  'black',\r\n  'teal',\r\n  'blue',\r\n  'darkBlue',\r\n  'orange',\r\n  'darkRed',\r\n  'red',\r\n];\r\n\r\nexport function sendToSW(message) {\r\n  if (\"serviceWorker\" in navigator && navigator.serviceWorker.controller) {\r\n    navigator.serviceWorker.controller.postMessage(message);\r\n  }\r\n}\r\nexport function triggerQueueSync(message) {\r\n  navigator.serviceWorker.ready.then(function(registration) {\r\n    registration.sync.register(message);\r\n  });\r\n}\r\n\r\nexport function getDateTime(datetime, override = true) {\r\n  if (!datetime) {\r\n    return ['', '', '', '', ''];\r\n  }\r\n  const [_date, _time] = datetime.split(\"T\");\r\n  const [h, m] = _time.split(\".\")[0].split(\":\");\r\n  const __date = new Date(_date);\r\n  let day, time, fullDate;\r\n  const date = __date.getDate();\r\n  const currentDate = new Date().getDate();\r\n  if (override) {\r\n    if (date === currentDate) {\r\n      day = \"Today\";\r\n    } else if (date === currentDate - 1) {\r\n      day = \"Yesterday\";\r\n    } else if (date === currentDate + 1) {\r\n      day = \"Tomorrow\";\r\n    }\r\n  }\r\n\r\n  [time, day, fullDate] = [`${h}:${m}`, day || __date.toLocaleString('en-us', {weekday: 'long'}), _date];\r\n  const dateTime = date === currentDate ? time : __date.getMonth() + '/' + date + ' ' + time;\r\n\r\n  return [date, time, day, fullDate, dateTime];\r\n}\r\n\r\nexport function getColorFromName(displayName) {\r\n  let color = 'blue';\r\n  if (!displayName) {\r\n      return color;\r\n  }\r\n\r\n  let hashCode = 0;\r\n  for (let iLen = displayName.length - 1; iLen >= 0; iLen--) {\r\n      const ch = displayName.charCodeAt(iLen);\r\n      const shift = iLen % 8;\r\n      // tslint:disable-next-line:no-bitwise\r\n      hashCode ^= (ch << shift) + (ch >> (8 - shift));\r\n  }\r\n\r\n  const COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\r\n\r\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\r\n\r\n  return color;\r\n}","import {getDateTime} from \"../utils\";\r\nimport {getCalendarStore} from \"../store/getCalendarStore\";\r\nimport {computed} from \"mobx\";\r\n\r\nconst getDuration = (end, start) => {\r\n    let distance = Math.abs(new Date(end) - new Date(start));\r\n    const hours = Math.floor(distance / 3600000);\r\n    distance -= hours * 3600000;\r\n    const minutes = Math.floor(distance / 60000);\r\n    return `${hours}:${(\"0\" + minutes).slice(-2)}`;\r\n};\r\nexport const getParsedEventsMap = () => {\r\n    const events = getCalendarStore()?.events;\r\n    try {\r\n        const dateGroups = {};\r\n        events.value.forEach(item => {\r\n            const start = getDateTime(item?.start?.dateTime);\r\n            const end = getDateTime(item?.end?.dateTime);\r\n            const duration = getDuration(item?.end?.dateTime, item?.start?.dateTime);\r\n            dateGroups[start[3]] = dateGroups[start[3]] || [];\r\n            const _item = {\r\n                ...item,\r\n                itemId: item?.id,\r\n                subject: item?.subject,\r\n                isRead: true,\r\n                start,\r\n                end,\r\n                location: item?.location?.displayName,\r\n                duration\r\n            };\r\n            dateGroups[start[3]].push(_item);\r\n        });\r\n        return dateGroups;\r\n    } catch (err) {\r\n        console.log(\"Error : \" + err);\r\n    }\r\n\r\n};\r\n\r\nexport const getActiveEventDetailsByEtag = (activeEtag) =>{\r\n    const events = getCalendarStore()?.events;\r\n    const decodedAcTiveEtag = decodeURIComponent(activeEtag);\r\n    return events?.value?.find(e=>{\r\n        return e?.[\"@odata.etag\"] === decodedAcTiveEtag;\r\n    });\r\n};","import React from 'react';\r\nimport {CalendarListItemHeader} from \"./CalendarListItemHeader\";\r\nimport {CalendarListItem} from \"./CalendarListItem\";\r\nimport config from \"../../Config\";\r\nimport {getEvents} from \"../../GraphService\";\r\nimport \"../styles/Calender.css\";\r\n\r\nimport {observer} from 'mobx-react';\r\nimport {updateCalendarItemsMap} from '../actions/calendarActions';\r\nimport {getActiveEventDetailsByEtag, getParsedEventsMap} from \"../selectors/getCalendarEvents\";\r\n\r\nexport const Calendar = observer(class Calendar extends React.Component {\r\n    async componentDidMount() {\r\n        try {\r\n            // Get the user's access token\r\n            const accessToken = await window.msal.acquireTokenSilent({\r\n                scopes: config.scopes\r\n            });\r\n            // Get the user's events\r\n            const events = await getEvents(accessToken, this.props.select);\r\n            // Update the array of events in state\r\n            events && updateCalendarItemsMap(events);\r\n        } catch (err) {\r\n            console.error('ERROR', err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const eventsMap= getParsedEventsMap();\r\n        const eventKeys = Object.keys(eventsMap).sort();\r\n        const activeEtag = this?.props?.match?.params?.etag;\r\n        if(activeEtag){\r\n            const eventDetails = getActiveEventDetailsByEtag(activeEtag);\r\n            return <div dangerouslySetInnerHTML={{__html: eventDetails?.body?.content}}/>;\r\n        }\r\n        return <div className=\"mailListContainer\">{\r\n            eventKeys.map((eventKey, k) => <React.Fragment key={k}>\r\n                <CalendarListItemHeader start={eventsMap[eventKey][0]?.start}/>\r\n                {eventsMap[eventKey].map((e, k)=><CalendarListItem key={k} {...e} />)}\r\n            </React.Fragment>)\r\n        }\r\n        </div>;\r\n    }\r\n});","import React from 'react';\r\nimport \"../styles/CalendarHeader.css\";\r\nexport const CalendarHeader = ({headerText}) =><div className=\"header\" >\r\n  <div className=\"header-item\">\r\n      <span>{headerText}</span>\r\n  </div>\r\n</div>;\r\n","import React from 'react';\r\n\r\n  import {Calendar} from \"./Calendar\";\r\n  import {CalendarHeader} from \"./CalendarHeader\";\r\n\r\n\r\nexport const\r\n    CalendarBox = (props) =><>\r\n      <CalendarHeader {...props}/>\r\n      <Calendar {...props}/>\r\n      </>;\r\n\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { UserAgentApplication } from 'msal';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport config from './Config';\r\nimport { getUserDetails } from './GraphService';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {CalendarBox} from './calendar/components/CalendarBox';\r\n\r\nconst App = class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.userAgentApplication = new UserAgentApplication({\r\n        auth: {\r\n            clientId: config.appId,\r\n            redirectUri: config.redirectUri\r\n        },\r\n        cache: {\r\n            cacheLocation: \"localStorage\",\r\n            storeAuthStateInCookie: true\r\n        }\r\n    });\r\n\r\n    var user = this.userAgentApplication.getAccount();\r\n\r\n    this.state = {\r\n      isAuthenticated: (user !== null),\r\n      user: {},\r\n      error: null\r\n    };\r\n\r\n    if (user) {\r\n      // Enhance user object with data from Graph\r\n      this.getUserProfile();\r\n    }else{\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let error = null;\r\n    const {user} =  this.state;\r\n    if (this.state.error) {\r\n      error = <ErrorMessage message={this.state.error.message} debug={this.state.error.debug} />;\r\n    }\r\n\r\n    return (\r\n      <Router>\r\n            <Route exact path=\"/\"\r\n              render={(props) =>\r\n                <CalendarBox {...props}\r\n                             headerText=\"Calendar\"\r\n                             user={user}\r\n                             showError={this.setErrorMessage.bind(this)}\r\n                             select=\"id,subject,start,end,location,body\"\r\n                />\r\n              } />\r\n            <Route exact path=\"/event-details/:etag\"\r\n               render={(props, params) =>\r\n                   <CalendarBox {...props} params={params}\r\n                                headerText=\"Calendar Details\"\r\n                                user={user}\r\n                                showError={this.setErrorMessage.bind(this)}\r\n                                select={false}\r\n                   />\r\n               } />\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  setErrorMessage(message, debug) {\r\n    this.setState({\r\n      error: {message: message, debug: debug}\r\n    });\r\n  }\r\n\r\n  async login() {\r\n    try {\r\n      await this.userAgentApplication.loginPopup(\r\n        {\r\n          scopes: config.scopes,\r\n          prompt: \"select_account\"\r\n      });\r\n      await this.getUserProfile();\r\n    }\r\n    catch(err) {\r\n      var error = {};\r\n\r\n      if (typeof(err) === 'string') {\r\n        var errParts = err.split('|');\r\n        error = errParts.length > 1 ?\r\n          { message: errParts[1], debug: errParts[0] } :\r\n          { message: err };\r\n      } else {\r\n        error = {\r\n          message: err.message,\r\n          debug: JSON.stringify(err)\r\n        };\r\n      }\r\n\r\n      this.setState({\r\n        isAuthenticated: false,\r\n        user: {},\r\n        error: error\r\n      });\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.userAgentApplication.logout();\r\n  }\r\n\r\n  async getUserProfile() {\r\n    try {\r\n      // Get the access token silently\r\n      // If the cache contains a non-expired token, this function\r\n      // will just return the cached token. Otherwise, it will\r\n      // make a request to the Azure OAuth endpoint to get a token\r\n\r\n      var accessToken = await this.userAgentApplication.acquireTokenSilent({\r\n        scopes: config.scopes\r\n      });\r\n\r\n      if (accessToken) {\r\n        // Get the user's profile from Graph\r\n        var user = await getUserDetails(accessToken);\r\n        this.setState({\r\n          isAuthenticated: true,\r\n          user: {\r\n            displayName: user.displayName,\r\n            email: user.mail || user.userPrincipalName\r\n          },\r\n          error: null\r\n        });\r\n        document.head.getElementsByTagName(\"title\")[0].text = `Calendar - ${user.displayName} - Outlook`;\r\n      }\r\n    }\r\n    catch(err) {\r\n      var error = {};\r\n      if (typeof(err) === 'string') {\r\n        var errParts = err.split('|');\r\n        error = errParts.length > 1 ?\r\n          { message: errParts[1], debug: errParts[0] } :\r\n          { message: err };\r\n      } else {\r\n        error = {\r\n          message: err.message,\r\n          debug: JSON.stringify(err)\r\n        };\r\n      }\r\n\r\n      this.setState({\r\n        isAuthenticated: false,\r\n        user: {},\r\n        error: error\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { applyMiddleware } from 'satcheljs';\r\nimport { trace } from 'satcheljs-trace';\r\n\r\nconst bootstrap = () => {\r\n    // Optionally enable some dev tools based on a URL parameter\r\n    let regex = new RegExp(\"[\\\\?&]devtools=\");\r\n    let url = window.location.href.toLowerCase();\r\n    if (regex.exec(url)) {\r\n        applyMiddleware(require('satcheljs-react-devtools').default, trace);\r\n    }\r\n\r\n    // Render the app\r\n    ReactDOM.render(<App />, document.getElementById('root'));\r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: https://bit.ly/CRA-PWA\r\n    serviceWorker.unregister();\r\n};\r\n\r\n\r\nbootstrap();\r\n\r\n","module.exports = {\r\n  appId: '98f6c11f-26a7-4309-a75f-b8df6e384711',\r\n  redirectUri: 'http://localhost:3000/',\r\n  scopes: [\r\n    'user.read',\r\n    'calendars.read'\r\n  ]\r\n};"],"sourceRoot":""}